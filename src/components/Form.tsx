import React, { useState } from 'react';import axios from 'axios';import { IHotelGuest } from '../types';import CheckoutButton from './CheckoutButton';interface FormProps {    onUserAdded: (newUser: IHotelGuest) => void;    onUpdateCheckout: (userId: number) => void;}const Form: React.FC<FormProps> = ({ onUserAdded, onUpdateCheckout }) => {    const [newUser, setNewUser] = useState<IHotelGuest>({        id: 6,        name: '',        email: '',        age: 0,        birthdate: '',        gender: 'male',        checkinDate: '',        checkoutDate: '',    });    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {        const { name, value } = event.target;        setNewUser((prevUser) => ({ ...prevUser, [name]: value }));    };    const handleSubmit = async (event: React.FormEvent) => {        event.preventDefault();        try {            const response = await axios.post('YOUR_API_ENDPOINT', newUser);            console.log('User added:', response.data);            onUserAdded(newUser);            setNewUser({                id: newUser.id + 1,                name: '',                email: '',                age: 0,                birthdate: '',                gender: 'female',                checkinDate: '',                checkoutDate: '',            });        } catch (error) {            console.error('Error adding user:', error);        }    };    return (        <form onSubmit={handleSubmit}>            <div>                <label>Name:</label>                <input type="text" name="name" value={newUser.name} onChange={handleInputChange} />            </div>            <div>                <label>Email:</label>                <input type="email" name="email" value={newUser.email} onChange={handleInputChange} />            </div>            <div>                <label>Age :</label>                <input type="text" name="age" value={newUser.age} onChange={handleInputChange} />            </div>            <div>                <label>Birth Date:</label>                <input type="text" name="birthdate" value={newUser.birthdate} onChange={handleInputChange} />            </div>            <div>                <label>Check In Date:</label>                <input type="text" name="checkinDate" value={newUser.checkinDate} onChange={handleInputChange} />            </div>            <div>                <label>Check Out Date:</label>                <input type="text" name="checkoutDate" value={newUser.checkoutDate} onChange={handleInputChange}/>            </div>            <button type="submit">Add User</button>            <CheckoutButton userId={newUser.id} onUpdateCheckout={onUpdateCheckout} />        </form>    );};export default Form;