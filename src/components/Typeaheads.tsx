import React, { useState } from 'react';import '../App.css';import { Typeahead } from 'react-bootstrap-typeahead';import 'bootstrap/dist/css/bootstrap.min.css';import 'react-bootstrap-typeahead/css/Typeahead.css';import axios from 'axios';const App: React.FC = () => {    const [activeTypeahead, setActiveTypeahead] = useState<string | null>(null);    const [selectedValue, setSelectedValue] = useState<string | null>(null);    const handleTypeaheadChange = (selected: any, typeaheadName: string) => {        if (selected.length > 0) {            setActiveTypeahead(typeaheadName);            setSelectedValue(selected[0][typeaheadName]);        } else {            setActiveTypeahead(null);            setSelectedValue(null);        }    };    const handleSearch = () => {        if (activeTypeahead && selectedValue) {            const searchType = activeTypeahead;            const searchValue = selectedValue;            const url = `http://localhost:9000/search=${searchValue}/searchType=${searchType}`;            axios.post(url)                .then(response => {                    console.log('Response:', response.data);                })                .catch(error => {                    console.error('Error:', error);                });        }    };    return (        <div className="App">            <div className="typeahead-container">                <Typeahead                    className="typeahead-box"                    disabled={activeTypeahead !== null && activeTypeahead !== 'name'}                    labelKey="name"                    options={[{ name: 'John' }, { name: 'Jane' }, { name: 'Alice' }]}                    onChange={(selected) => handleTypeaheadChange(selected, 'name')}                    placeholder="Name"                />                <Typeahead                    className="typeahead-box"                    disabled={activeTypeahead !== null && activeTypeahead !== 'id'}                    labelKey="id"                    options={[{ id: '1' }, { id: '2' }, { id: '3' }]}                    onChange={(selected) => handleTypeaheadChange(selected, 'id')}                    placeholder="ID"                />                <Typeahead                    className="typeahead-box"                    disabled={activeTypeahead !== null && activeTypeahead !== 'email'}                    labelKey="email"                    options={[{ email: 'john@example.com' }, { email: 'jane@example.com' }, { email: 'alice@example.com' }]}                    onChange={(selected) => handleTypeaheadChange(selected, 'email')}                    placeholder="Email"                />                <button onClick={handleSearch} disabled={!activeTypeahead || !selectedValue}>                    Search                </button>            </div>        </div>    );};export default App;